<?php
namespace App\Services;
 
//use App\Post;
use App\Repositories\ReserveAccountRepository;
use Illuminate\Http\Request;

class ReserveAccountService{
    protected $reserveAccountRepo;
    private $reserveAccountUrl = 'https://sandbox.monnify.com/api/v1/bank-transfer/reserved-accounts';

	public function __construct(ReserveAccountRepository $reserveAccountRepo){
		$this->reserveRepo = $reserveAccountRepo;
    }
    
	public function showIndex(){
		return $this->reserveRepo->indexRepo('ReservedAccount.index');
    }

    public function session_data($credential){
         if($credential->session()->has('api_token'))
        return $credential->session()->get('api_token');
    }

    public function showAccount(){
        return $this->reserveRepo->showAccountForm('ReservedAccount.accountReserved');
    }

    public static function getRefrencesName($len = 5) {
        $word = array_merge(range('0', '9'), range('A', 'Z'));
        shuffle($word);
        return substr(implode($word), 0, $len);
    }

    public function reservedAccountCurl_API(Request $request, $user_data){ 

        $curl = curl_init();
        curl_setopt_array($curl, array(
            CURLOPT_URL => $this->reserveAccountUrl,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            // CURLOPT_USERPWD => $api_key.':'.$password,
            // CURLOPT_SSL_VERIFYPEER=> false,
            // CURLOPT_HTTPAUTH => CURLAUTH_BASIC,
            CURLOPT_POST=> true,
            CURLOPT_HTTPHEADER => array(
                "Content-Type:application/json",
                "Authorization: Bearer ".$this->session_data($request), // This is the API key.
                "Cache-Control: no-cache",
            ),
            CURLOPT_POSTFIELDS => $user_data,
        ));
         $errors = curl_error($curl);   
         return $response =  json_decode(curl_exec($curl),true); // convert object to array
         curl_close($curl);  
    }

    public function storeReservedAccount(Request $request){
         $customerData = array(
            'accountName' => $request->customerName,
            'accountReference' => self::getRefrencesName(), // Account Refrences is autoGenerated.
            "currencyCode"  => $request->currency,
            "contractCode"  => $request->contractCode,
            "customerEmail"  => $request->customerEmail
        );
        return $this->reservedAccountCurl_API($request, $customerData);
        //dd(self::getRefrencesName();
        // $data = array(
        //     'accountName' => $request->customerName,
        //     'accountReference' => self::getRefrencesName(), // Account Refrences is autoGenerated.
        //     "currencyCode"  => $request->currency,
        //     "contractCode"  => $request->contractCode,
        //     "customerEmail"  => $request->customerEmail
        // );
    }

    
    
 
}